Процесс приготовления заказа
	Заказ состоит из компонентов четырех типов: бурегры, дополнения, напитки и картошка. Бургеры и дополнения приготавливаются кухней и при этом находятся в одной очереди, напитки - на беверидже, картошка - на фритюре. На одной кухне работает от двух до четырех человек. На напитках работает от одного до двух. На картошке всегда один человек. Так же есть рабочее место на гриле, где жарится мясо.
	На кухне есть три позиции: инициатор (максимально один человек), ассемблер (максимально один человек) и финишер (максимально два человека). Инициатор готовит булки, а также отдает команду на запаковку дополнений, ассемблер распределяет гарнир, а финишер раскладывает мясо, упаковывет бургеры, упаковывает дополнения и готовит сырье для дополнений во фритюре. В случае, если на позиции финишера находятся два человека, один из них занимается раскладыванием мяса, упаковкой и дополнениями, а другой - фритюрницей. Минимально на кухне может работать два человека. В таком случае один берет на себя обязанности инициатора и асемблера, а второй - финишера и асемблера. При нахождении на кухне трех работников, происходит равномерное распределение по позициям. Работники разных позиций могут помогать друг другу или исполнять несколько ролей, если людей на все позиции не хватает. Работает это, исходя из важного правила: заготовки для бургеров не могут "простаивать". Это значит, что если инициатор приготовил булки, но никто не начал накладывать в них начинку, инициатор не приступит к приготовлению следующих булок, а возьмет на себя роль асемблера. Далее, если начинка готова, но некому положить мясо и упаковать бургер, инциатор возьмет на себя работу финишера. Асемблер же может заменить финишера по тому же принципу. Важно отметить, что ввиду ограниченного свободного пространства, два человека не могут одновременно заниматься упаковкой дополнений или бургеров. Это значит, что асемблер не может, к примеру, помогать в запаковку бургера, в то время как этим уже занимается финишер. Тем не менее, для упрощения скажем, что финишер может заняться упаковкой бургера (или дополнения), в то время как ему помогает асемблер. Время упаковки небольшое, поэтому ошибка, данная этим допущением, не будет играть роли. Она нужна, чтобы асемблер не блокировал работу финишера. Место позволяет нескольким людям одновременно наполнять бургер гарниром. Кроме того, существует правило двух бургеров, которое гласит, что один работник может одновременно заниматься приготовлением максимально двух бургеров. Это значит, что не в зависимости от количества заказов, инициатор может в один момент времени готовить только две булки. Вне зависимости от количества готовых булок, асемблер может заниматься наполнением только двух из них. Точно так же максимально двумя бургерами может заниматься финишер.
	Отдельного внимания заслуживает финишер, занимающийся приготовленим сырья для дополнений. В его обязанности входит поддержание опеделенного количества готового сырья. Сырье потенциально может быть разным (наггетсы, стрипсы, сыры и так далее). Однако для упрощения модели разные типы сырья не различаются. Одна порция сырья соответствует одному дополнению. Количество порций, поддерживаемое финишерем фиксировано для каждого временного периода каждого дня. Скажем также, что одна фритюрница может одновременно готовить одну порцию сырья, однако может варьироваться количество самих фритюрниц. Далее скажем, что существует два значения количества сырья: то, которое необходимо поддерживать и минимальное, при достижении которого финишер начинает пополнять запас.
	
	Алгоритм инициатора:
		1) Очередь заказов X, количество булок в тостере y, количество булок на линии z, количество готовых булок q, количество принятых заказов на бургеры t.
		2) Если (q == 0) AND (s == 0), перейти к пункту 3). Если (z > 2), перейти к пункту 5). Если (q != 0), перейти к пункту 6). Время оценки ситуации фиксированно.
		3) Если очередь пуста, перейти к пункту 4. Выбрать заказ из очереди. Если это дополнение, отдать приказ на заполнение дополнения. Иначе, t++. Если (t == 2), перейти к пункту 4). Перейти к пункту 3). Отдача приказа о упаковке занимает время, данное нормальным разложением.
		4) Если (t == 0), перейти к пункту 5). Закинуть в тостер t булок. Время закидывания булок одинаково для t=1 и t=2, определяется нормальным разложением. Перейти к пункту 2).
		5) Если (z - 2 == 1), наполнить один бургер. Если (z - 2 > 1), наполнить два бургера. Перейти к пункту 2). Наполнение бургера занимает время, данное нормальным разложением. При этом середина нормального разложения наполнения одновременно двух бургеров в полтора раза больше, чем середина нормального разложения времени наполнения одного бургера.
		6) Если (q < 2), переместить все булки из тостера на линию, иначе переместить две булки из тостера на линию. Перейти к пункту 2). Время перемещение булок не зависит от их количества и определяется нормальным разложением.
			
	Алгоритм асемблера:
		1) Количество булок x, количество булок с гарниром y, количество приказов на запаковку дополнений z.
		2) Если (z != 0) AND ((единственный финишер не на пункте 4)) OR (финишер на упаковку не на пункте 3))), перейти к пункту 3). Если (x != 0) AND ((единственный финишер не на пункте 5) OR (финишер на упаковке не на пунктие 5)), перейти к пункту 4). Анализ ситуации занимает фиксированное время.
		3) Запаковать одно дополнение и перейти к пункту 2). Запаковка занимает время, данное нормальным розложением.
		4) Если (y == 1), запаковать один бургер. Если (y > 1), запаковать два бургера. Перейти к пункту 2). Запаковка бургером занимает время, данное нормальным разложением. При этом середина нормального разложения запаковки одновременно двух бургеров в полтора раза больше, чем середина нормального разложения времени запаковки одного бургера.
		5) Если (x == 1), наполнить один бургер. Если (x > 1), наполнить два бургера. Перейти к пункту 2). Наполнение бургера занимает время, данное нормальным разложением. При этом середина нормального разложения наполнения одновременно двух бургеров в полтора раза больше, чем середина нормального разложения времени наполнения одного бургера.
	
	Алгоритм единственного финишера:
		1) Количество булок с гарниром n, количество приказов на упаковку дополнений m, количество булок без гарнира x, поддерживаемое значение сырья N, минимальное значения сырья M, текущее значение сырья z, количество готовящегося мяса y, количество фритюрниц S.
		2) Если имеется готовое сырье, перейти к пункту 7). Если (z + y < M) AND (y < S), перейти к пункту 3). Если (m != 0), перейти к пункту 4). Если (n != 0), перейти к пункту 5). Если (x != 0), перейти к пункту 6). Анализ ситуации забирает фиксированное время.
		3) Поставить сырье на готовку. Перейти к пункту 2). Начало готовки порции сырья занимает время, определенное нормальным разложением. Приготовление одной порции сырья во фритюрнице занимает фиксированное время.
		4) Запаковать одно дополнение и перейти к пункту 2). Запаковка занимает время, данное нормальным розложением.
		5) Если (n == 1), запаковать один бургер. Если (n > 1), запаковать два бургера. Перейти к пункту 2). Запаковка бургером занимает время, данное нормальным разложением. При этом середина нормального разложения запаковки одновременно двух бургеров в полтора раза больше, чем середина нормального разложения времени запаковки одного бургера.
		6) Если (x == 1), наполнить один бургер. Если (n > 1), наполнить два бургера. Перейти к пункту 2). Наполнение бургера занимает время, данное нормальным разложением. При этом середина нормального разложения наполнения одновременно двух бургеров в полтора раза больше, чем середина нормального разложения времени наполнения одного бургера.
		7) Перенос всего готового сырья в лоток. Перенос одной порции сырья занимает время, опреденное нормальным разложением. Переход к пункту 2).
		
	Алгоритм финишера, занимающегося только запаковкой бургеров и дополнений:
		1) Количество булок с гарниром n, количество приказов на упаковку дополнений m, количество булок без гарнира x.
		2) Если (m != 0), перейти к пункту 3). Если (n != 0), перейти к пункту 4). Если (x != 0), перейти к пункту 5. Перейти к пункту 2). Анализ ситуации забирает фиксированное количество времени.
		3) Запаковать одно дополнение и перейти к пункту 2). Запаковка занимает время, данное нормальным розложением.
		4) Если (n == 1), запаковать один бургер. Если (n > 1), запаковать два бургера. Перейти к пункту 2). Запаковка бургером занимает время, данное нормальным разложением. При этом середина нормального разложения запаковки одновременно двух бургеров в полтора раза больше, чем середина нормального разложения времени запаковки одного бургера.
		5) Если (x == 1), наполнить один бургер. Если (n > 1), наполнить два бургера. Перейти к пункту 2). Наполнение бургера занимает время, данное нормальным разложением. При этом середина нормального разложения наполнения одновременно двух бургеров в полтора раза больше, чем середина нормального разложения времени наполнения одного бургера.
		
	Алгоритм финишера, занимающегося только фритезой:
		1) Поддерживаемое значние N, минимальное значение M, текущее значение x, количество готовящегося мяса y, количество фритюрниц S.
		2) Если имеется готовое сырье, перейти к пункту 4). Если (x + y < M) AND (y < S), тогда перейти к пункту 3). Иначе перейти к пункту 2). Подсчет сырья занимает фиксированное время.
		3) Поставить сырье на готовку. Перейти к пункту 2). Начало готовки порции сырья занимает время, определенное нормальным разложением. Приготовление одной порции сырья во фритюрнице занимает фиксированное время.
		4) Перенос всего готового сырья в лоток. Перенос одной порции сырья занимает время, опреденное нормальным разложением. Переход к пункту 2).
